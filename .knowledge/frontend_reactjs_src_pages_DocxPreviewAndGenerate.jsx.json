{"is_source_file": true, "format": "JavaScript/React JSX", "description": "This source file defines a React functional component DocxPreviewAndGenerate that provides UI and logic for generating a .docx document based on templates and user data. It handles fetching templates, processing placeholders, and triggering downloads, with error handling and user feedback.", "external_files": ["../services/docxInPlaceTemplateMergeService.js", "../services/bundledTemplates.js"], "external_methods": ["loadDocxArrayBuffer", "prepareTemplateData", "mergeDocxWithData", "ensureSampleDocxIfMissing", "getBundledTemplateInfoByType"], "published": ["DocxPreviewAndGenerate"], "classes": [], "methods": [{"name": "onGenerate", "description": "Asynchronous callback that loads the necessary services, determines the template source, handles fallback scenarios, prepares data, merges it into the template, and triggers download. It includes error handling."}, {"name": "triggerDownload(blob, filename)", "description": "Creates a temporary anchor element to facilitate downloading the generated .docx blob with the specified filename, then cleans up.", "scope": "DocxPreviewAndGenerate", "scopeKind": "function"}, {"name": "DocxPreviewAndGenerate({ data })", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["import('../services/docxInPlaceTemplateMergeService.js')", "import('../services/bundledTemplates.js')", "ensureSampleDocxIfMissing(sowType, data)", "getBundledTemplateInfoByType(sowType)", "loadDocxArrayBuffer(templateDocxUrl)", "prepareTemplateData(data?.templateData || {})", "mergeDocxWithData(ab, dataMap, { keepUnfilledTags: true })"], "search-terms": ["DocxPreviewAndGenerate", "generate DOCX", "templateDocxUrl", "bundledTemplates", "docxInPlaceTemplateMergeService", "sowType", "fallback"], "state": 2, "file_id": 52, "knowledge_revision": 362, "git_revision": "de055292fc85404a75b776e3be7a6b47b68b0dc3", "revision_history": [{"198": ""}, {"229": "28980887af9dd4c47d5cae8d358830faab7b3efd"}, {"273": "28980887af9dd4c47d5cae8d358830faab7b3efd"}, {"274": "28980887af9dd4c47d5cae8d358830faab7b3efd"}, {"284": "0ba606bb2d5c7e2ebe4c789101883ad8a43d6a34"}, {"286": "0ba606bb2d5c7e2ebe4c789101883ad8a43d6a34"}, {"289": "1cb80fed1e3f32d48be4477358fc80a02c281a8c"}, {"290": "1cb80fed1e3f32d48be4477358fc80a02c281a8c"}, {"296": "3c937a3a367c499b826afa9df74704ecf19eac7f"}, {"299": "2642327c74f1e253b807c0c61a6e53b4693729b0"}, {"323": "ecea73d5bffd2090deca635a713324fbd90ff81e"}, {"324": "ecea73d5bffd2090deca635a713324fbd90ff81e"}, {"332": "c0858ae2986b63fdb312d8a660a6747bd4ad1721"}, {"334": "c0858ae2986b63fdb312d8a660a6747bd4ad1721"}, {"337": "c0858ae2986b63fdb312d8a660a6747bd4ad1721"}, {"341": "c9087ec30198b6f067caf2b1853dc8a10f6b3462"}, {"352": "80829d596c6d9116559c972dfaa9ee81952943d1"}, {"358": "b28f7f6e6827af89dae9145043863a59f2b88016"}, {"362": "de055292fc85404a75b776e3be7a6b47b68b0dc3"}], "ctags": [{"_type": "tag", "name": "DocxPreviewAndGenerate", "path": "/home/kavia/workspace/code-generation/sow-generator-platform-17223-17232/frontend_reactjs/src/pages/DocxPreviewAndGenerate.jsx", "pattern": "/^export default function DocxPreviewAndGenerate({ data }) {$/", "language": "JavaScript", "kind": "function", "signature": "({ data })"}, {"_type": "tag", "name": "onGenerate", "path": "/home/kavia/workspace/code-generation/sow-generator-platform-17223-17232/frontend_reactjs/src/pages/DocxPreviewAndGenerate.jsx", "pattern": "/^          onClick={onGenerate}$/", "language": "JavaScript", "kind": "field", "scope": "DocxPreviewAndGenerate.onClick", "scopeKind": "class"}, {"_type": "tag", "name": "triggerDownload", "path": "/home/kavia/workspace/code-generation/sow-generator-platform-17223-17232/frontend_reactjs/src/pages/DocxPreviewAndGenerate.jsx", "pattern": "/^  function triggerDownload(blob, filename) {$/", "language": "JavaScript", "kind": "function", "signature": "(blob, filename)", "scope": "DocxPreviewAndGenerate", "scopeKind": "function"}], "hash": "ba3023750105ce63c065f43bfacd335e", "format-version": 4, "code-base-name": "frontend_reactjs", "filename": "frontend_reactjs/src/pages/DocxPreviewAndGenerate.jsx", "fields": [{"name": "onClick={onGenerate}", "scope": "DocxPreviewAndGenerate.onClick", "scopeKind": "class", "description": "unavailable"}]}