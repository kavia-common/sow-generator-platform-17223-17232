{"is_source_file": true, "format": "JavaScript", "description": "This file is a JavaScript module for a frontend React project, providing functions to load, validate, and process DOCX template files, perform data merging, and handle image embedding for in-place DOCX template merging.", "external_files": ["pizzip", "docxtemplater"], "external_methods": ["fetch", "atob", "FileReader"], "published": ["loadDocxArrayBuffer", "prepareTemplateData", "mergeDocxWithData", "normalizeKey"], "classes": [], "methods": [{"name": "loadDocxArrayBuffer(urlOrFile)", "description": "Loads a DOCX ArrayBuffer from a URL, File, or Blob, performing validation to ensure it's a valid ZIP package, distinguishing it from text files or corrupted uploads.", "scope": "", "scopeKind": ""}, {"name": "prepareTemplateData(templateData, meta = {})", "description": "Converts user input data into a flattened key-value map suitable for merging into a DOCX template, including support for nested data and image placeholders.", "scope": "", "scopeKind": ""}, {"name": "mergeDocxWithData(docxArrayBuffer, dataMap, options = {})", "description": "Performs an in-place merge of a DOCX ArrayBuffer with a provided data map, supporting inline image embedding and custom tag delimiters, returning a Promise that resolves to a Blob.", "scope": "", "scopeKind": ""}, {"name": "normalizeKey(label)", "description": "Loosely normalizes input labels into a consistent key format for mapping to DOCX tags.", "scope": "", "scopeKind": ""}, {"name": "applyImagesToDataMap(dm)", "scope": "mergeDocxWithData", "scopeKind": "function", "description": "unavailable"}, {"name": "dataUrlToBytes(dataUrl)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "fetchAsDataUrl(url)", "scope": "mergeDocxWithData", "scopeKind": "function", "description": "unavailable"}, {"name": "hasInput(v)", "scope": "prepareTemplateData", "scopeKind": "function", "description": "unavailable"}, {"name": "isZipLocalFileHeader(u8)", "scope": "loadDocxArrayBuffer", "scopeKind": "function", "description": "unavailable"}, {"name": "looksLikeDocx(name, type)", "scope": "loadDocxArrayBuffer", "scopeKind": "function", "description": "unavailable"}, {"name": "putIfHasInput(k, v)", "scope": "prepareTemplateData", "scopeKind": "function", "description": "unavailable"}, {"name": "toStringValue(v)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "walk(prefix, val)", "scope": "prepareTemplateData", "scopeKind": "function", "description": "unavailable"}], "calls": ["fetch", "atob"], "search-terms": ["docxInPlaceTemplateMergeService", "prepareTemplateData", "mergeDocxWithData", "loadDocxArrayBuffer", "pizzip", "docxtemplater", "image embedding", "DOCX template validation", "in-place DOCX merging"], "state": 2, "file_id": 62, "knowledge_revision": 394, "git_revision": "76bc94aefec89cfd9b061641afac2331a93a3630", "revision_history": [{"295": ""}, {"300": "2642327c74f1e253b807c0c61a6e53b4693729b0"}, {"333": "ecea73d5bffd2090deca635a713324fbd90ff81e"}, {"361": "c9087ec30198b6f067caf2b1853dc8a10f6b3462"}, {"363": "bf1b7f845e63d34c4c2050a40afc8bb5f5678d50"}, {"364": "bf1b7f845e63d34c4c2050a40afc8bb5f5678d50"}, {"365": "bf1b7f845e63d34c4c2050a40afc8bb5f5678d50"}, {"389": "f190ac03ce5318515dcd90fa6fa211fadc2defda"}, {"391": "f190ac03ce5318515dcd90fa6fa211fadc2defda"}, {"394": "76bc94aefec89cfd9b061641afac2331a93a3630"}], "ctags": [{"_type": "tag", "name": "angularParser", "path": "/home/kavia/workspace/code-generation/sow-generator-platform-17223-17232/frontend_reactjs/src/services/docxInPlaceTemplateMergeService.js", "pattern": "/^    angularParser: (tag) => {$/", "language": "JavaScript", "kind": "property", "scope": "mergeDocxWithData.moduleLike", "scopeKind": "class"}, {"_type": "tag", "name": "applyImagesToDataMap", "path": "/home/kavia/workspace/code-generation/sow-generator-platform-17223-17232/frontend_reactjs/src/services/docxInPlaceTemplateMergeService.js", "pattern": "/^  async function applyImagesToDataMap(dm) {$/", "language": "JavaScript", "kind": "function", "signature": "(dm)", "scope": "mergeDocxWithData", "scopeKind": "function"}, {"_type": "tag", "name": "cx", "path": "/home/kavia/workspace/code-generation/sow-generator-platform-17223-17232/frontend_reactjs/src/services/docxInPlaceTemplateMergeService.js", "pattern": "/^        const cx = tagValue.width || 180;$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "cy", "path": "/home/kavia/workspace/code-generation/sow-generator-platform-17223-17232/frontend_reactjs/src/services/docxInPlaceTemplateMergeService.js", "pattern": "/^        const cy = tagValue.height || 56;$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "dataUrlToBytes", "path": "/home/kavia/workspace/code-generation/sow-generator-platform-17223-17232/frontend_reactjs/src/services/docxInPlaceTemplateMergeService.js", "pattern": "/^function dataUrlToBytes(dataUrl) {$/", "language": "JavaScript", "kind": "function", "signature": "(dataUrl)"}, {"_type": "tag", "name": "enriched", "path": "/home/kavia/workspace/code-generation/sow-generator-platform-17223-17232/frontend_reactjs/src/services/docxInPlaceTemplateMergeService.js", "pattern": "/^    const enriched = await applyImagesToDataMap(dataMap || {});$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "fetchAsDataUrl", "path": "/home/kavia/workspace/code-generation/sow-generator-platform-17223-17232/frontend_reactjs/src/services/docxInPlaceTemplateMergeService.js", "pattern": "/^  async function fetchAsDataUrl(url) {$/", "language": "JavaScript", "kind": "function", "signature": "(url)", "scope": "mergeDocxWithData", "scopeKind": "function"}, {"_type": "tag", "name": "hasInput", "path": "/home/kavia/workspace/code-generation/sow-generator-platform-17223-17232/frontend_reactjs/src/services/docxInPlaceTemplateMergeService.js", "pattern": "/^  function hasInput(v) {$/", "language": "JavaScript", "kind": "function", "signature": "(v)", "scope": "prepareTemplateData", "scopeKind": "function"}, {"_type": "tag", "name": "isZipLocalFileHeader", "path": "/home/kavia/workspace/code-generation/sow-generator-platform-17223-17232/frontend_reactjs/src/services/docxInPlaceTemplateMergeService.js", "pattern": "/^  function isZipLocalFileHeader(u8) {$/", "language": "JavaScript", "kind": "function", "signature": "(u8)", "scope": "loadDocxArrayBuffer", "scopeKind": "function"}, {"_type": "tag", "name": "loadDocxArrayBuffer", "path": "/home/kavia/workspace/code-generation/sow-generator-platform-17223-17232/frontend_reactjs/src/services/docxInPlaceTemplateMergeService.js", "pattern": "/^export async function loadDocxArrayBuffer(urlOrFile) {$/", "language": "JavaScript", "kind": "function", "signature": "(urlOrFile)"}, {"_type": "tag", "name": "looksLikeDocx", "path": "/home/kavia/workspace/code-generation/sow-generator-platform-17223-17232/frontend_reactjs/src/services/docxInPlaceTemplateMergeService.js", "pattern": "/^  function looksLikeDocx(name, type) {$/", "language": "JavaScript", "kind": "function", "signature": "(name, type)", "scope": "loadDocxArrayBuffer", "scopeKind": "function"}, {"_type": "tag", "name": "mergeDocxWithData", "path": "/home/kavia/workspace/code-generation/sow-generator-platform-17223-17232/frontend_reactjs/src/services/docxInPlaceTemplateMergeService.js", "pattern": "/^export function mergeDocxWithData(docxArrayBuffer, dataMap, options = {}) {$/", "language": "JavaScript", "kind": "function", "signature": "(docxArrayBuffer, dataMap, options = {})"}, {"_type": "tag", "name": "moduleLike", "path": "/home/kavia/workspace/code-generation/sow-generator-platform-17223-17232/frontend_reactjs/src/services/docxInPlaceTemplateMergeService.js", "pattern": "/^  const moduleLike = {$/", "language": "JavaScript", "kind": "class", "scope": "mergeDocxWithData", "scopeKind": "class"}, {"_type": "tag", "name": "normalizeKey", "path": "/home/kavia/workspace/code-generation/sow-generator-platform-17223-17232/frontend_reactjs/src/services/docxInPlaceTemplateMergeService.js", "pattern": "/^export function normalizeKey(label) {$/", "language": "JavaScript", "kind": "function", "signature": "(label)"}, {"_type": "tag", "name": "prepareTemplateData", "path": "/home/kavia/workspace/code-generation/sow-generator-platform-17223-17232/frontend_reactjs/src/services/docxInPlaceTemplateMergeService.js", "pattern": "/^export function prepareTemplateData(templateData, meta = {}) {$/", "language": "JavaScript", "kind": "function", "signature": "(templateData, meta = {})"}, {"_type": "tag", "name": "putIfHasInput", "path": "/home/kavia/workspace/code-generation/sow-generator-platform-17223-17232/frontend_reactjs/src/services/docxInPlaceTemplateMergeService.js", "pattern": "/^  function putIfHasInput(k, v) {$/", "language": "JavaScript", "kind": "function", "signature": "(k, v)", "scope": "prepareTemplateData", "scopeKind": "function"}, {"_type": "tag", "name": "reason", "path": "/home/kavia/workspace/code-generation/sow-generator-platform-17223-17232/frontend_reactjs/src/services/docxInPlaceTemplateMergeService.js", "pattern": "/^      const reason = (e && e.properties && e.properties.errors && e.properties.errors.map((er) =/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "run", "path": "/home/kavia/workspace/code-generation/sow-generator-platform-17223-17232/frontend_reactjs/src/services/docxInPlaceTemplateMergeService.js", "pattern": "/^  const run = async () => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "toStringValue", "path": "/home/kavia/workspace/code-generation/sow-generator-platform-17223-17232/frontend_reactjs/src/services/docxInPlaceTemplateMergeService.js", "pattern": "/^function toStringValue(v) {$/", "language": "JavaScript", "kind": "function", "signature": "(v)"}, {"_type": "tag", "name": "walk", "path": "/home/kavia/workspace/code-generation/sow-generator-platform-17223-17232/frontend_reactjs/src/services/docxInPlaceTemplateMergeService.js", "pattern": "/^  function walk(prefix, val) {$/", "language": "JavaScript", "kind": "function", "signature": "(prefix, val)", "scope": "prepareTemplateData", "scopeKind": "function"}], "hash": "913d014990c3c4a633b4fa6278e5ddf8", "format-version": 4, "code-base-name": "frontend_reactjs", "filename": "frontend_reactjs/src/services/docxInPlaceTemplateMergeService.js", "fields": [{"name": "angularParser: (tag) => {", "scope": "mergeDocxWithData.moduleLike", "scopeKind": "class", "description": "unavailable"}]}